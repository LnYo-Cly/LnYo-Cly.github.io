import{_ as a,K as l,o as n,c as s,k as t,a as e,O as o,X as c}from"./chunks/framework.e702791a.js";const O=JSON.parse('{"title":"Button 按钮","description":"","frontmatter":{},"headers":[],"relativePath":"components/button/index.md","filePath":"components/button/index.md","lastUpdated":1692118712000}'),i={name:"components/button/index.md"},r=t("h1",{id:"button-按钮",tabindex:"-1"},[e("Button 按钮 "),t("a",{class:"header-anchor",href:"#button-按钮","aria-label":'Permalink to "Button 按钮"'},"​")],-1),h=t("h2",{id:"按钮类型",tabindex:"-1"},[e("按钮类型 "),t("a",{class:"header-anchor",href:"#按钮类型","aria-label":'Permalink to "按钮类型"'},"​")],-1),u=t("p",null,[e("通过"),t("code",null,"type"),e("属性设置按钮类型，共有四种：")],-1),_=t("li",null,"primary",-1),m=t("li",null,"outline(默认)",-1),b=t("li",null,"dashed",-1),p=t("h2",{id:"禁用",tabindex:"-1"},[e("禁用 "),t("a",{class:"header-anchor",href:"#禁用","aria-label":'Permalink to "禁用"'},"​")],-1),f=c('<h2 id="设置颜色-状态" tabindex="-1">设置颜色/状态 <a class="header-anchor" href="#设置颜色-状态" aria-label="Permalink to &quot;设置颜色/状态&quot;">​</a></h2><p>已经内置如下颜色/状态：</p><ul><li>primary(默认)</li><li>success</li><li>danger</li><li>warning</li><li>info</li></ul><p>你可以通过<code>status</code>或者<code>color</code>去设置上述五种内置状态色。两种属性的区别：</p><ul><li><code>status</code>有代码提示，<code>color</code>无代码提示</li><li><code>status</code>仅限上述的五种颜色，<code>color</code>无限制</li><li><strong><code>color</code>优先级高于<code>status</code>，二者同时存在时，<code>color</code>会覆盖<code>status</code></strong>。</li></ul><p>这里更推荐使用<code>color</code>属性，如果需要上述五种状态色的代码提示则推荐<code>status</code></p><p><code>color</code>属性自定义颜色(符合css样式即可): 例如<code>black</code>、<code>#ff42b3</code>、<code>linear-gradient(111.4deg, rgb(238, 113, 113) 1%, rgb(246, 215, 148) 58%)</code>，更多样式你可以也可以通过设置css自定义。</p>',7),g=t("h2",{id:"长按钮",tabindex:"-1"},[e("长按钮 "),t("a",{class:"header-anchor",href:"#长按钮","aria-label":'Permalink to "长按钮"'},"​")],-1),x=t("p",null,[e("设置"),t("code",null,"long"),e("属性，可以让按钮与父元素等宽。")],-1),P=t("h2",{id:"按钮大小",tabindex:"-1"},[e("按钮大小 "),t("a",{class:"header-anchor",href:"#按钮大小","aria-label":'Permalink to "按钮大小"'},"​")],-1),k=t("p",null,[e("你可以根据需要，设置"),t("code",null,"size"),e("属性自定义按钮大小，默认medium。")],-1),T=t("li",null,"large",-1),q=t("li",null,"medium",-1),v=t("li",null,"small",-1),y=t("h2",{id:"按钮形状",tabindex:"-1"},[e("按钮形状 "),t("a",{class:"header-anchor",href:"#按钮形状","aria-label":'Permalink to "按钮形状"'},"​")],-1),A=t("p",null,[e("通过设置"),t("code",null,"shape"),e("属性设置按钮的形状：")],-1),S=t("ul",null,[t("li",null,"square(矩形，无圆角)"),t("li",null,"round(大圆角)"),t("li",null,"circle(圆形)")],-1),V=t("p",null,"默认为小圆角(4px)",-1),N=c('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>按钮类型</td><td>string</td><td><code>primary</code> | <code>outline</code> | <code>dashed</code> | <code>text</code></td><td><code>outline</code></td></tr><tr><td>size</td><td>按钮大小</td><td>string</td><td><code>large</code> | <code>medium</code> | <code>small</code> | <code>mini</code></td><td><code>medium</code></td></tr><tr><td>status</td><td>按钮状态</td><td>string</td><td><code>primary</code> | <code>warning</code> | <code>success</code> | <code>danger</code> | <code>info</code></td><td>-</td></tr><tr><td>color</td><td>按钮颜色</td><td>string</td><td><code>status</code> | <code>string</code></td><td>-</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>-</td><td><code>false</code></td></tr><tr><td>shape</td><td>按钮形状</td><td>string</td><td><code>square</code> | <code>round</code> | <code>circle</code> | <code>mini-round</code></td><td>-</td></tr><tr><td>long</td><td>长按钮</td><td>boolean</td><td>-</td><td><code>false</code></td></tr><tr><td>loading</td><td>加载按钮</td><td>boolean</td><td>-</td><td><code>false</code></td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3>',4);function B(I,C,$,z,D,E){const d=l("demo");return n(),s("div",null,[r,h,u,t("ul",null,[_,m,b,t("li",null,[e("text"),o(d,{src:"demos/button/basic.vue"})])]),p,o(d,{src:"demos/button/disabled.vue"}),f,o(d,{src:"demos/button/color.vue"}),g,x,o(d,{src:"demos/button/long.vue"}),P,k,t("ul",null,[T,q,v,t("li",null,[e("mini"),o(d,{src:"demos/button/size.vue"})])]),y,A,S,V,o(d,{src:"demos/button/shape.vue"}),N])}const R=a(i,[["render",B]]);export{O as __pageData,R as default};
