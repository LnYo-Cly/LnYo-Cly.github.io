import{_ as s,o as n,c as a,X as e}from"./chunks/framework.e702791a.js";const m=JSON.parse('{"title":"基础介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/base-introduce.md","filePath":"guide/base-introduce.md","lastUpdated":1692118712000}'),p={name:"guide/base-introduce.md"},l=e(`<h1 id="基础介绍" tabindex="-1">基础介绍 <a class="header-anchor" href="#基础介绍" aria-label="Permalink to &quot;基础介绍&quot;">​</a></h1><h2 id="项目目录" tabindex="-1">项目目录 <a class="header-anchor" href="#项目目录" aria-label="Permalink to &quot;项目目录&quot;">​</a></h2><p>本项目采用monorepo架构，核心可分为：components、theme-chalk、utils、docs、play</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">├─.husky                          // 实现git hooks</span></span>
<span class="line"><span style="color:#e1e4e8;">├─.vscode                         // vscode配置文件夹</span></span>
<span class="line"><span style="color:#e1e4e8;">├─build                           // 用于项目的打包操作</span></span>
<span class="line"><span style="color:#e1e4e8;">├─docs                            // 编写组件库的文档</span></span>
<span class="line"><span style="color:#e1e4e8;">├─packages                        // 组件库的核心</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─components                   // 存放所有组件组件</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─button</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  ├─src                    // 组件源码</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─__test__               // vitest测试</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  │  └─index.ts               // 导出单个组件</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  ├─other-components</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─components.ts             // 导出所有组件</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─index.ts                  // 导出整体</span></span>
<span class="line"><span style="color:#e1e4e8;">│  │  └─vite.config.ts            // vite打包配置</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─elu-design                   // 用于存放所有组件的导出入口</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─theme-chalk                  // 编写组件样式</span></span>
<span class="line"><span style="color:#e1e4e8;">│  └─utils                        // 编写组件所需的工具类</span></span>
<span class="line"><span style="color:#e1e4e8;">├─play                            // 演示组件效果</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">├─.husky                          // 实现git hooks</span></span>
<span class="line"><span style="color:#24292e;">├─.vscode                         // vscode配置文件夹</span></span>
<span class="line"><span style="color:#24292e;">├─build                           // 用于项目的打包操作</span></span>
<span class="line"><span style="color:#24292e;">├─docs                            // 编写组件库的文档</span></span>
<span class="line"><span style="color:#24292e;">├─packages                        // 组件库的核心</span></span>
<span class="line"><span style="color:#24292e;">│  ├─components                   // 存放所有组件组件</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─button</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  ├─src                    // 组件源码</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─__test__               // vitest测试</span></span>
<span class="line"><span style="color:#24292e;">│  │  │  └─index.ts               // 导出单个组件</span></span>
<span class="line"><span style="color:#24292e;">│  │  ├─other-components</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─components.ts             // 导出所有组件</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─index.ts                  // 导出整体</span></span>
<span class="line"><span style="color:#24292e;">│  │  └─vite.config.ts            // vite打包配置</span></span>
<span class="line"><span style="color:#24292e;">│  ├─elu-design                   // 用于存放所有组件的导出入口</span></span>
<span class="line"><span style="color:#24292e;">│  ├─theme-chalk                  // 编写组件样式</span></span>
<span class="line"><span style="color:#24292e;">│  └─utils                        // 编写组件所需的工具类</span></span>
<span class="line"><span style="color:#24292e;">├─play                            // 演示组件效果</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="开始一个全新的项目" tabindex="-1">开始一个全新的项目 <a class="header-anchor" href="#开始一个全新的项目" aria-label="Permalink to &quot;开始一个全新的项目&quot;">​</a></h2><p>如果你想基于此项目构建一套全新的项目，你可以clone此项目删除一些不必的文件，或者新建一个文件开始。</p><ol><li>下面介绍只需保留哪些文件：</li></ol><ul><li>根目录：<code>.npmrc</code>、<code>package.json</code>、<code>pnpm-workspace.yaml</code>、<code>tsconfig.json</code></li><li><code>build</code>目录</li><li><code>packages</code>目录</li><li><code>docs</code>和<code>play</code>目录不是必须的，你也可以新建项目去测试组件和搭建组件文档</li></ul><p>其余的文件和文件夹都不需要保留，再根目录<code>package.json</code>中，你可以删除无用的依赖。</p><ol start="2"><li><p>如何构建？</p><p>在根目录下运行<code>pnpm run build</code>即可构建，具体构建代码在<code>build/gulpfile.ts</code>，它会自动生成所有的打包文件以及声明文件，打包目录为<code>dist</code></p><blockquote><p>打包已经更换为vite打包，build目录下的打包文件不再使用，仅用来打包样式。</p></blockquote></li><li><p>发布为你的npm</p></li></ol><p>代码构建完毕后，你会发现<code>dist</code>目录下，有一个<code>package.json</code>，这个文件来自于<code>/packages/elu-design/package.json</code>，这个文件就是你发布的npm包的具体信息。 在发布之前，你需要确保你的npm源是官方源，如果不是请进行切换：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry</span><span style="color:#E1E4E8;">                                              </span><span style="color:#6A737D;"># 查看当前源</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://registry.npm.taobao.org</span><span style="color:#E1E4E8;">       </span><span style="color:#6A737D;"># 修改为淘宝镜像</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://registry.npmjs.org</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 修改为官方源</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry</span><span style="color:#24292E;">                                              </span><span style="color:#6A737D;"># 查看当前源</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://registry.npm.taobao.org</span><span style="color:#24292E;">       </span><span style="color:#6A737D;"># 修改为淘宝镜像</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://registry.npmjs.org</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 修改为官方源</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用<code>npm login</code>登录账号，接着在<code>dist</code>目录下执行<code>npm publish</code>即可发布。</p>`,13),o=[l];function c(t,r,i,d,y,u){return n(),a("div",null,o)}const E=s(p,[["render",c]]);export{m as __pageData,E as default};
